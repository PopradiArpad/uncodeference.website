{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/styles/mixins.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx"],"names":["_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_4__","_components_Page__WEBPACK_IMPORTED_MODULE_2__","_components_Container__WEBPACK_IMPORTED_MODULE_3__","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","colors","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","fonts","sansSerif","serif","monospace","breakpoints","xs","sm","md","lg","xl","widths","dimensions","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","getEmSize","size","_variables__WEBPACK_IMPORTED_MODULE_0__","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","object","string","isRequired","func","m","module","exports","__webpack_require__","default","StyledPage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","__webpack_exports__","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","StyledContainer","_styles_mixins__WEBPACK_IMPORTED_MODULE_4__","_styles_variables__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","createElement","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","assign","json","shape","normalize","variables","mixins","StyledLayoutRoot","styled_base_browser_esm","components_LayoutRoot","core_browser_esm","react","StyledLayoutMain","components_LayoutMain","gatsby_browser_entry","Helmet_default","site","siteMetadata","meta","content","description","_991718019"],"mappings":"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","file":"component---src-templates-page-tsx-0ec7f29ca98a064b3223.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          url: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n      }\n    }\n  }\n}\n\nconst PageTemplate: React.SFC<PageTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>{data.markdownRemark.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default PageTemplate\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","/* tslint:disable:max-line-length */\n\nexport const colors = {\n  brand: 'rgba(115, 202, 136, .9)',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n}\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n}\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n}\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n}\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n}\n\nexport const heights = {\n  header: 90\n}\n","import { dimensions } from './variables'\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.SFC<ContainerProps> = ({ children, className }) => (\n  <StyledContainer className={className}>{children}</StyledContainer>\n)\n\nexport default Container\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { dimensions, fonts, colors, breakpoints } from './variables'\nimport { getEmSize } from './mixins'\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.white};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n    border-bottom-style: dotted;\n\n    &:hover,\n    &:focus {\n      border-bottom-style: solid;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    // color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`\n","import * as React from 'react'\nimport { Global, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport normalize from '../styles/normalize'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from '@emotion/styled'\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport 'modern-normalize'\nimport '../styles/normalize'\n\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\ntype StaticQueryProps = {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n    }\n  }\n}\n\nconst IndexLayout: React.SFC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: 'gatsbyjs, gatsby, javascript, sample, something' }\n          ]}\n        />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n)\n\nexport default IndexLayout\n"],"sourceRoot":""}